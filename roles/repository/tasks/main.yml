---
- name: Debug
  ansible.builtin.debug:
    var:  repository_map_supported_os_version
- name: Debug
  ansible.builtin.debug:
    var:  repository_map_supported_os_version[repository_version | string]
- name: Debug
  ansible.builtin.debug:
    var:  repository_map_supported_os_version[repository_version | string][ansible_architecture]
- name: Debug
  ansible.builtin.debug:
    var:  repository_map_supported_os_version[repository_version | string][ansible_architecture][ansible_distribution]

- name: 'Assert : Supported version control'
  ansible.builtin.assert:
    that:
      - repository_internal_supported_os is true
    quiet: true
  vars:
    repository_internal_supported_os: '{{
        repository_map_supported_os_version[repository_version | string][ansible_architecture][ansible_distribution] is defined
        and repository_map_supported_os_version[repository_version | string][ansible_architecture][ansible_distribution][ansible_distribution_major_version] is defined
        and ansible_distribution_version
          is regex(repository_map_supported_os_version[repository_version | string][ansible_architecture][ansible_distribution][ansible_distribution_major_version])
      }}'
  tags: [assert, deploy, config, remove]

- name: Resolve repository conflict
  block:
    - name: 'Package : Remove "zabbix-release" package to avoid conflict'
      become: true
      ansible.builtin.package:
        name: zabbix-release
        state: absent
        purge: '{{ true if ansible_os_family == "Debian" else omit }}'
  rescue:
    - name: 'Rescue : Source file absent'
      ansible.builtin.file:
        path: '{{ repository_internal_old_source_file[ansible_os_family] }}'
        state: absent
      vars:
        repository_internal_old_source_file:
          Debian: /etc/apt/sources.list.d/zabbix.list
          RedHat: /etc/yum.repos.d/zabbix.repo
    - name: 'Rescue : Remove "zabbix-release" package to avoid conflict'
      become: true
      ansible.builtin.package:
        name: zabbix-release
        state: absent
        purge: '{{ true if ansible_os_family == "Debian" else omit }}'
  tags: [deploy]

- name: 'Variables : Include system and distribution specific'
  ansible.builtin.include_vars: '{{ ansible_os_family | lower }}.yml'
  tags: [deploy, remove]
- name: Include OS packager(yum/apt) specific tasks
  ansible.builtin.include_tasks: '{{ ansible_os_family | lower }}.yml'
  tags: [deploy, remove]
